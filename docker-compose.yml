version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro

  reservations:
    build: 
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
      args:
        BUILD_ENV: development  # This sets the environment for the build stage
        NODE_ENV: development   # This sets the runtime environment
    command: pnpm run start:dev
    env_file:
      - ./apps/reservations/.env
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
  auth:
    build: 
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:dev auth
    env_file:
      - ./apps/auth/.env
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app
  payments:
    build: 
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
      args:
        BUILD_ENV: development  # This sets the environment for the build stage
        NODE_ENV: development   # This sets the runtime environment
    command: pnpm run start:dev payments
    env_file:
      - ./apps/payments/.env
    volumes:
      - .:/usr/src/app
  notifications:
    build: 
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
      args:
        BUILD_ENV: development  # This sets the environment for the build stage
        NODE_ENV: development   # This sets the runtime environment
    command: pnpm run start:dev notifications
    env_file:
      - ./apps/notifications/.env
    volumes:
      - .:/usr/src/app

volumes:
  mongo_data:
